full_input = """491,57 -> 506,57 -> 506,56
469,142 -> 473,142
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
475,142 -> 479,142
470,154 -> 475,154
506,89 -> 511,89
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
466,151 -> 471,151
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
496,91 -> 501,91
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
503,91 -> 508,91
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
500,93 -> 505,93
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
495,14 -> 495,15 -> 508,15 -> 508,14
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
495,14 -> 495,15 -> 508,15 -> 508,14
454,163 -> 458,163
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
472,139 -> 476,139
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
514,93 -> 519,93
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
466,145 -> 470,145
457,160 -> 461,160
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
456,154 -> 461,154
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
502,87 -> 507,87
460,163 -> 464,163
453,157 -> 458,157
478,145 -> 482,145
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
493,93 -> 498,93
467,157 -> 472,157
463,166 -> 467,166
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
487,53 -> 487,54 -> 500,54 -> 500,53
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
451,166 -> 455,166
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
472,145 -> 476,145
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
507,93 -> 512,93
460,157 -> 465,157
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
484,123 -> 484,124 -> 501,124
462,148 -> 467,148
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
459,151 -> 464,151
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
506,84 -> 506,79 -> 506,84 -> 508,84 -> 508,80 -> 508,84 -> 510,84 -> 510,82 -> 510,84 -> 512,84 -> 512,75 -> 512,84
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
487,53 -> 487,54 -> 500,54 -> 500,53
487,53 -> 487,54 -> 500,54 -> 500,53
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
495,14 -> 495,15 -> 508,15 -> 508,14
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
457,166 -> 461,166
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
488,51 -> 488,44 -> 488,51 -> 490,51 -> 490,47 -> 490,51 -> 492,51 -> 492,43 -> 492,51 -> 494,51 -> 494,48 -> 494,51
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
510,91 -> 515,91
463,154 -> 468,154
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
474,157 -> 479,157
480,127 -> 480,130 -> 475,130 -> 475,136 -> 494,136 -> 494,130 -> 486,130 -> 486,127
491,57 -> 506,57 -> 506,56
499,89 -> 504,89
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
484,123 -> 484,124 -> 501,124
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29
492,18 -> 492,20 -> 489,20 -> 489,26 -> 497,26 -> 497,20 -> 495,20 -> 495,18
493,119 -> 493,114 -> 493,119 -> 495,119 -> 495,114 -> 495,119 -> 497,119 -> 497,115 -> 497,119 -> 499,119 -> 499,109 -> 499,119 -> 501,119 -> 501,109 -> 501,119
505,60 -> 505,63 -> 499,63 -> 499,71 -> 509,71 -> 509,63 -> 508,63 -> 508,60
485,106 -> 485,96 -> 485,106 -> 487,106 -> 487,103 -> 487,106 -> 489,106 -> 489,98 -> 489,106 -> 491,106 -> 491,96 -> 491,106 -> 493,106 -> 493,105 -> 493,106 -> 495,106 -> 495,100 -> 495,106 -> 497,106 -> 497,102 -> 497,106
497,29 -> 497,32 -> 493,32 -> 493,38 -> 507,38 -> 507,32 -> 501,32 -> 501,29"""

test_input = """498,4 -> 498,6 -> 496,6
503,4 -> 502,4 -> 502,9 -> 494,9"""

class Sandbox:
    SAND_START = (500,0)
    SAND = 'O'
    ROCK = '#'
    EMPTY = '.'

    def __init__(self, input_str):
        self.left = self.right = self.SAND_START[0]
        self.height = self.SAND_START[1] + 1
        self.paths=[[eval(pair) for pair in line.split(' -> ')] for line in input_str.split('\n')]
        for path in self.paths:
            for x,y in path:
                self.left = min(self.left, x)
                self.right = max(self.right, x)
                self.height = max(self.height, y+1)
        self.grid = [[self.EMPTY for _ in range(self.right - self.left + 1)] for _ in range(self.height)]
        self.draw_lines()

    def __str__(self):
        result_str = ''
        for line in self.grid:
            result_str += ' '.join(line) + '\n'
        return result_str

    def grid_x(self, x):
        return x - self.left

    def draw_lines(self):
        for path in self.paths:
            for (x1,y1),(x2,y2) in zip(path,path[1:]):
                if x1 != x2:
                    for x in range(min(x1,x2), max(x1,x2)+1):
                        self.grid[y1][self.grid_x(x)] = self.ROCK
                elif y1 != y2:
                    for y in range(min(y1,y2), max(y1,y2)+1):
                        self.grid[y][self.grid_x(x1)] = self.ROCK

    # Drops a single grain of sand from the sand start point, according to the following rules:
    # 1. If the space directly beneath the grain is empty, it moves down into it
    # 2. If that space is filled, try to move down and to the left
    # 3. If that space is filled, try to move down and to the right
    # 4. If none of these spaces is available, come to rest.
    # 5. If the grain moves past the bounds of the grid, it falls forever
    # Returns True if the grain comes to rest, and False if it falls forever
    def drop_grain(self, start=None):
        if start is None:
            start = self.SAND_START
        grain_x, grain_y = [self.grid_x(start[0]), start[1]]
        settling = True
        while(settling):
            if grain_y + 1 >= self.height:
                return False
            elif self.grid[grain_y + 1][grain_x] == self.EMPTY:
                grain_y += 1
            elif grain_x - 1 < 0:
                return False
            elif self.grid[grain_y+1][grain_x-1] == self.EMPTY:
                grain_y += 1
                grain_x -= 1
            elif grain_x + 1 > len(self.grid[grain_y+1]):
                return False
            elif self.grid[grain_y+1][grain_x+1] == self.EMPTY:
                grain_y += 1
                grain_x += 1
            else:
                self.grid[grain_y][grain_x] = self.SAND
                settling = False
        return True

    # Drops grains of sand until no more settle and they begin falling into the abyss.
    # Returns the number of grains that settled
    def pour_sand(self):
        settled = 0
        while self.drop_grain():
            settled += 1
            print(self)
        return settled


test_sandbox = Sandbox(test_input)
print(f'Part 1 Test: {test_sandbox.pour_sand()}')

full_sandbox = Sandbox(full_input)
print(f'Part 1 Full: {full_sandbox.pour_sand()}')
